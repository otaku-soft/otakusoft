<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="favicon.ico">

    <title>{{ pagetitle }}</title>
    <link href='https://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css'>
   <script src="{{ asset('js/jquery.js') }}"></script>
    <script src="{{ asset('js/jquery.validate.js') }}"></script>
    <script src="{{ asset('js/jquery.validate.password.js') }}"></script>
    <script src="{{ asset('js/bootstrap.js') }}"></script>
    <script src="{{ asset('js/docs.min.js') }}"></script>
    <script src = "https://ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular.min.js"></script>
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <script src="{{ asset('js/ie10-viewport-bug-workaround.js') }}"></script>
    <!-- third party css files = bootstrap core css + kendo components css -->
    <!-- Bootstrap core CSS -->
    <link href="{{ asset('css/bootstrap.css') }}" rel="stylesheet">
    <!-- Bootstrap theme -->
    <link href="{{ asset('css/jquery.validate.password.css') }}" rel="stylesheet">
    <link href="{{ asset('css/custom.css') }}" rel="stylesheet">
    <script type="text/javascript" src="{{asset('tinymce_jquery/js/tinymce/tinymce.min.js') }}"></script>
    <!-- Custom styles for this template -->
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="{{asset('js/html5shiv.min.js') }}"></script>
      <script src="{{ asset('js/respond.min.js') }}"></script>
    <![endif]-->
    <link href="{{ asset('css/jquery.dataTables.css') }}" rel="stylesheet">
    <script src ="{{ asset('//cdn.datatables.net/1.10.6/js/jquery.dataTables.min.js') }}"></script>
    <script src="http://localhost:8082/socket.io/socket.io.js"></script>
    {% include "tinymce.html.twig" %}
    {% set userid = render(controller('IndexIndexBundle:Header:userid')) %}
    <script>
    var errorMessage = "";
    var appendText = "";
    var inmessage = 0;
    var activeUsers = Array();
    
    socket =  io.connect("http://127.0.0.1:8082");
    

    if ("{{ pagetitle }}" == "Messages")
    sendNotificationSelfMessage();  

    socket.on('clients', function(data)
    {
    	var onlinestring = "";
		for(var key in data) 
		{
			activeUsers[key] = 1;
			if (key != -1)
			{
				if (onlinestring != "")
				onlinestring = onlinestring + ",";
				onlinestring = onlinestring + key;
			}
		}
		
    	for(var key in activeUsers) 
    	showStatus(key);

    	var querystring = "ids=" + onlinestring;
    	var page = "{{ path('_index_getOnlineUsers') }}";
    	if (onlinestring != "")
    	{
			$.post(page, querystring).done(function(data) 
			{
				$("#whoisonline").html(data);
			});    	
		}
		else
		$("#whoisonline").html("No one is logged in right now");	

    });
	
    socket.on('connect', function () 
    {
      socket.emit('setUserId',[{{userid}},socket.id]);
    });
    {% if userid != -1 %}
    socket.on('message', function(msg)
    {
      
      if(msg == "message{{userid}}")
      {
        var page = "{{ path('_index_private_messages_count') }}";
        var querystring = "";
        $.post(page, querystring).done(function(data) 
        {
          if (parseInt(data) >  $("#messagescount").html())
          playNotificationSound();
          if ("{{ pagetitle }}" == "Messages")
          {
            if (inmessage == 0)
            {
              privateMessagesInboxTable.fnDraw(false);
              if (parseInt(data) >  $("#messagescount").html())
              showAlert('Message','You have just received a new message :3');
            
              var page = "{{ path('profiles_messages_reset_seen') }}";
              var querystring = "";
              $.post(page, querystring).done(function(data) 
              {
                sendNotificationSelfMessage();
                inmessage = 1;
              });
            }
            else
            inmessage = 0;
          }
          else  
          $("#messagescount").html(data);  

        });
      }
      if (msg == "notifications{{userid}}")
      {
        updateNotificationCount(true);
      }
    });
    {% endif %}
    $(window).on('beforeunload', function ()
    {
        socket.emit('removeUserId',[{{userid}},socket.id]);
       
    });    
    function showStatus(id)
    {
    	if (activeUser(id))
    	$(".otakuUserOnline" + id).html('<span class="label label-success">Online</span>');
    	else
    	$(".otakuUserOnline" + id).html('');
    }
    function activeUser(id)
    {
    	if (typeof(activeUsers[id]) !== "undefined")
 		return true;
 		return false;
    }
    function showAlert(title,message,titleClass,messageClass)
    {
        $("#alertModalLabel").html("");
        $("#alertModalMessage").html("");
        if(typeof titleClass !== "undefined")
        title = '<div class ="' + titleClass + '">' + title + '</div>';

        if(typeof messageClass !== "undefined")
        message = '<div class ="' + messageClass + '">' + message + '</div>';    

        $("#alertModalLabel").html(title);
        $("#alertModalMessage").html(message);
        $("#alertModal").modal("show");
    }
    function validateEmail(email) {
        var re = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
        return re.test(email);
    }
    function sendmessage()
    {

      socket.send("customAlert");
    }
  function readURL(input) 
  {
    if (input.files && input.files[0]) 
    {
      var reader = new FileReader();

      reader.onload = function (e) 
      {
        
        $('#' + input.id + 'Image').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]);
    }
  }
    function ajaxModal(page,title,size,iframe)
    {
      if(typeof(size)==='undefined') 
      size = "medium";
      if(typeof(iframe)==='undefined') 
      iframe = false;
      if (size == "medium")
      {
        $("#ajaxModuleDialog").prop("class","modal-dialog");
        $("#ajaxModule").prop("class","modal fade");
      }
      else if (size == "small")
      {
        $("#ajaxModuleDialog").prop("class","modal-dialog modal-sm");
        $("#ajaxModule").prop("class","modal fade bs-example-modal-sm");
      }
      else if (size == "large")
      {
        $("#ajaxModuleDialog").prop("class","modal-dialog modal-lg");
        $("#ajaxModule").prop("class","modal fade bs-example-modal-lg");
      }
      else if (size = "extra large")//for those really big pages
      {
        $("#ajaxModuleDialog").width("1200px");
        $("#ajaxModule").prop("class","modal fade bs-example-modal-lg");
      }
      if (!iframe)
      {
        $("#ajaxModalIframe").hide();
        $( "#ajaxModuleContent" ).load(page, function()
        {
          $("#ajaxModuleTitle").html(title);
          $("#ajaxModule").modal("show");  
        });
      }
      else
      {
        $("#ajaxModuleTitle").html(title);
        $("#ajaxModalIframe").prop("src",page);
        $("#ajaxModalIframe").show();
        $("#ajaxModule").modal("show");  
      }

    }
    function showalert(id)
    {
      if(typeof(id)==='undefined') 
      id = "saved-alert";
      $("#" + id).show();
      $('html, body').animate({ scrollTop: 0 }, 0);
	  setTimeout(function()
	  { 
	  	$("#" + id).hide();
	  },2000);
    }
    function redirectTo(page)
    {
      if(typeof(page)==='undefined') 
      page = "";
      window.location = page;
    }
    function sendEmail()
    {
      querystring = $("#requestPassword").serialize();
      page = "{{ path("fos_user_resetting_send_email") }}";
      $.post(page, querystring).done(function(data) 
      {
        if (data.indexOf("does not exist") > -1)
        $("#doesNotExistAlert").show();
        else if (data.indexOf("last 24 hours") > -1)
        $("#last24HoursAlert").show();
        else
        $("#emailSentAlert").show();
      });  
    }
    function orderBy(description,value)
    {
      $("#orderByDescription").html(description);
      $("#orderByValue").val(value);
    }

    function search(searchurl,searchtype)
    {
      var page = searchurl + "?search=" +  encodeURIComponent($("#searchContent").val().trim());
      var title = "Search Results";
      var size = "large";
      

      if ($("#searchContent").val().trim() != "")
      {
        if (searchtype == "ajax")
        ajaxModal(page,title,size);
        if (searchtype == "page")  
        window.location = page;
      }
      
      else
      showAlert("Oh noes","You searched for nothing :(");
    }

    function gotopage(url,ajaxContainer)
    {
      if (ajaxContainer == "")
      window.location = url;
      else
      {
        $.get(url, function(data, status)
        {
          $("#" + ajaxContainer).html(data);
        });
      }
    }
    {% if searchurl is defined %}
    {% if searchtype is not defined %}
    {% set searchtype = "ajax" %}
    {% endif %}
  $( document ).ready(function() 
  {
    $("#searchForm").submit(function(event)
    {
      event.preventDefault();
      search('{{searchurl}}','{{ searchtype }}');
    });
    // Start the socket
   
    //socket.connect();
     



  });
  {% endif %}
  var countz = 0;
  function sendprivatemessage(id,messageid)
  {
    if(typeof(messageid)==='undefined')
    messageid = -1; 
    tinyMCE.remove();
    ajaxModal('{{ path('profiles_messages_send_message') }}?id=' + id + "&messageid=" + messageid,'Send Message','large');
  }
    $(document).on('focusin', function(e) {
    if ($(e.target).closest(".mce-window").length) {
        e.stopImmediatePropagation();
    }
});

    function updateNotificationCount(playaudio)
    {
      if(typeof(playaudio)==='undefined')
      playaudio = false;

      var querystring = "";
      var page = "{{ path('notifications_messages_count') }}";
      $.post(page, querystring).done(function(data) 
      {
        if (playaudio && parseInt(data) > parseInt($("#notificationscount").html()))
        {
          playNotificationSound();
        }
        $("#notificationscount").html(data);
      });
    }
    function playNotificationSound()
    {

      var audio = document.createElement('audio');
      audio.setAttribute('src', '{{asset('notification.mp3') }}');
      audio.play();
    }

    function sendNotification(msg)
    {
      socket.send(msg);
    }
    function sendNotificationSelf()
    {
      sendNotification("notifications{{userid}}");
    }
    function sendNotificationSelfMessage()
    {
      sendNotification("message{{userid}}");
    }
    function subscribe(querystring)
    {
      var page = "{{ path('_index_subscribe') }}";
      $.post(page, querystring).done(function(data) 
      {
        showAlert("Subscription Updated");
      });

    }
    function logout()
    {
    	socket.emit('removeUserId',[{{userid}},socket.id]);
    	window.location = "{{ path('fos_user_security_logout') }}";
    }

    function select_all(id)
    {

        var $this = $("#" + id);
        $this.select();

        // Work around Chrome's little problem
        $this.mouseup(function() 
        {
            $this.unbind("mouseup");
            return false;
        });

    }
    </script>
  


  </head>